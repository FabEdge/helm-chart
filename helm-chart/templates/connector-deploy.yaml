apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.connector.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "connector.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "connector.labels" . | nindent 6 }}
  {{- if .Values.connector.strategy }}
  strategy:
    {{- toYaml .Values.connector.strategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "connector.labels" . | nindent 8 }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  {{- range .Values.cluster.connectorLabels }}
                  - key: {{ index (regexSplit "=" . -1) 0 }}
                    operator: Exists
                  {{- end }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ .Values.connector.name }}
            topologyKey: kubernetes.io/hostname
      hostNetwork: true
      containers:
        - name: strongswan
          image: {{ .Values.strongswan.image.repository }}:{{ .Values.strongswan.image.tag }}
          imagePullPolicy: {{ .Values.strongswan.image.pullPolicy }}
          readinessProbe:
            exec:
              command:
              - /usr/sbin/swanctl
              - --version
            initialDelaySeconds: 15
            periodSeconds: 10
          securityContext:
            capabilities:
              add: ["NET_ADMIN", "SYS_MODULE"]
          volumeMounts:
            - name: var-run
              mountPath: /var/run/
            - name: ipsec-d
              mountPath: /etc/ipsec.d/
              readOnly: true
            - name: ipsec-secrets
              mountPath: /etc/ipsec.secrets
              subPath: ipsec.secrets
              readOnly: true
          {{- if .Values.strongswan.resources }}
          resources:
            {{- toYaml .Values.strongswan.resources | nindent 12 }}
          {{- end }}
        - name: connector
          securityContext:
            capabilities:
              add: ["NET_ADMIN"]
          image: {{ .Values.connector.image.repository }}:{{ .Values.connector.image.tag | default .Chart.AppVersion }}
          imagePullPolicy: {{ .Values.connector.image.pullPolicy }}
          args:
            - --cni-type={{ include "cniType" . }}
            - --sync-period={{ .Values.connector.syncPeriod }}
            - --connector-node-addresses={{ include "connector.node.addresses" . }}
            - -v={{ .Values.connector.logLevel }}
          volumeMounts:
            - name: var-run
              mountPath: /var/run/
            - name: connector-config
              mountPath: /etc/fabedge/
            - name: ipsec-d
              mountPath: /etc/ipsec.d/
              readOnly: true
          {{- if .Values.connector.resources }}
          resources:
            {{- toYaml .Values.connector.resources | nindent 12 }}
          {{- end }}
      volumes:
        - name: var-run
          emptyDir: {}
        - name: connector-config
          configMap:
            name: connector-config
        - name: ipsec-d
          secret:
            items:
              - key: ca.crt
                path: cacerts/ca.crt
              - key: tls.crt
                path: certs/tls.crt
              - key: tls.key
                path: private/tls.key
            secretName: connector-tls
        - name: ipsec-secrets
          secret:
            items:
              - key: ipsec.secrets
                path: ipsec.secrets
            secretName: connector-tls
