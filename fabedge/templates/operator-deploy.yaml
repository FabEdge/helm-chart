apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.operator.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "fabedgeOperator.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.operator.replicas }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "fabedgeOperator.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "fabedgeOperator.labels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Values.operator.name }}
          image: {{ .Values.operator.image.repository }}:{{ .Values.operator.image.tag | default .Chart.AppVersion }}
          imagePullPolicy: {{ .Values.operator.image.pullPolicy }}
          args:
            - --cluster={{ .Values.cluster.name }}
            - --cluster-role={{ .Values.cluster.role }}
            - --cluster-cidr={{ join "," .Values.cluster.clusterCIDR }}
            {{- if .Values.operator.endpointIDFormat }}
            - --endpoint-id-format={{ .Values.operator.endpointIDFormat }}
            {{- end }}
            {{- if .Values.operator.certOrgName }}
            - --cert-organization={{ .Values.operator.certOrgName }}
            {{- end }}
            {{- if .Values.operator.certValidityPeriod }}
            - --cert-validity-period={{ .Values.operator.certValidityPeriod }}
            {{- end }}
            {{- if .Values.operator.tokenValidPeriod }}
            - --token-valid-period={{ .Values.operator.tokenValidPeriod }}
            {{- end }}
            {{- if eq .Values.cluster.role "host" }}
            - --api-server-cert-file=/etc/fabedge/tls.crt
            - --api-server-key-file=/etc/fabedge/tls.key
            - --api-server-listen-address=0.0.0.0:3030
            {{- end }}
            {{- if eq .Values.cluster.role "member" }}
            - --api-server-address={{ .Values.cluster.operatorAPIServer }}
            - --init-token={{ .Values.cluster.initToken }}
            {{- end }}
            - --cni-type={{ include "cniType" . }}
            {{- if eq (include "cniType" .) "calico" }}
            - --edge-pod-cidr={{ .Values.cluster.edgePodCIDR }}
            - --edge-cidr-mask-size={{ .Values.cluster.edgeCIDRMaskSize }}
            {{- if .Values.cluster.edgePodCIDR6 }}
            - --edge-pod-cidr6={{ .Values.cluster.edgePodCIDR6 }}
            - --edge-cidr-mask-size6={{ .Values.cluster.edgeCIDRMaskSize6 }}
            {{- end }}
            {{- end }}
            - --agent-image={{ .Values.agent.image.repository }}:{{ .Values.agent.image.tag | default .Chart.AppVersion }}
            - --agent-strongswan-image={{ .Values.strongswan.image.repository }}:{{ .Values.strongswan.image.tag | default .Chart.AppVersion }}
            - --edge-labels={{ join "," .Values.cluster.edgeLabels }}
            - --connector-public-addresses={{ join "," .Values.cluster.connectorPublicAddresses }}
            - --connector-subnets={{ join "," .Values.cluster.serviceClusterIPRange }}
            {{- if not (eq (int .Values.cluster.connectorPublicPort)  500) }}
            - --connector-public-port={{ .Values.cluster.connectorPublicPort }}
            {{- end }}
            - --connector-as-mediator={{ .Values.cluster.connectorAsMediator }}
            {{- if gt (int .Values.operator.replicas) 1 }}
            - --leader-election=true
            {{- end }}
            - --auto-keep-ippools={{ .Values.operator.autoKeepIPPools }}
            - -v={{ .Values.operator.logLevel }}
          env:
          {{- range $key, $value := .Values.agent.args }}
            - name: AGENT_ARG_{{ $key }}
              value: {{ $value | quote }}
          {{- end }}
          {{- if eq .Values.cluster.role "host" }}
          ports:
            - containerPort: 3030
              name: apiserver
          volumeMounts:
            - name: tls
              mountPath: /etc/fabedge/
          readinessProbe:
            httpGet:
              port: 3030
              scheme: HTTPS
              path: "/api/ca-cert"
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 30
            failureThreshold: 3
          {{- end }}
          {{- if .Values.operator.resources }}
          resources:
            {{- toYaml .Values.operator.resources | nindent 12 }}
          {{- end }}
      serviceAccountName: {{ .Values.operator.name }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  {{- range .Values.cluster.connectorLabels }}
                  - key: {{ index (regexSplit "=" . -1) 0 }}
                    operator: Exists
                  {{- end }}
      {{- if eq .Values.cluster.role "host" }}
      volumes:
      - name: tls
        secret:
          items:
          - key: tls.crt
            path: tls.crt
          - key: tls.key
            path: tls.key
          secretName: {{ include "operator.tlsName" . | quote }}
      {{- end }}
